https://blog.devgenius.io/an-epic-tale-comparing-jdbc-and-r2dbc-in-a-real-world-scenario-a536db512834
https://blog.devgenius.io/an-epic-tale-comparing-jdbc-and-r2dbc-in-a-real-world-scenario-part-2-2-d908df49651c
https://www.youtube.com/watch?v=0rnMIueRKNU

pool size 20


리액티브 스택이 CPU 사용과 CPU 컨텍스트 전환을 최소화하기 위해 추가적인 큐를 사용하는 최적화는, 데이터베이스에서 소수의 행(row)을 가져오는 시나리오에서는 충분하지 않을 수 있습니다. 리액티브 프로젝트는 처리 과정에 많은 오버헤드를 추가하기 때문에, 아마도 이러한 이유로 인해 R2DBC가 일부 경우에 매우 느리게(WAAAY slower) 보일 수 있습니다.